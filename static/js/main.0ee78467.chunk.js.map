{"version":3,"sources":["features/PokemonList/PokemonCard/CardTemplate/CardTemplate.module.css","common/apiSlice.js","features/PokemonList/Pagination/Pagination.js","features/PokemonList/PokemonCard/CardTemplate/CardTemplate.js","features/PokemonList/PokemonCard/PokemonCard.js","features/PokemonList/PokemonList.js","app/App.js","app/store.js","index.js"],"names":["module","exports","pokemonApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPokemon","query","fullLink","useGetPokemonQuery","Pagination","prevPageUrl","nextPageUrl","setPage","disabled","onClick","CardTemplate","data","callback","Card","border","text","bg","className","style","width","minHeight","overflow","Header","css","cardHeader","name","toUpperCase","cardId","order","Img","variant","src","sprites","other","front_default","Body","Title","Text","as","ref","abilities","map","ability","substr","PokemonCard","pokemonLink","error","isLoading","PokemonsList","useState","page","setPrevPageUrl","setNextPageUrl","useEffect","previous","next","observer","useRef","lastPokemonCardRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","newPokemonElement","useMemo","results","p","index","length","url","pokemonElement","push","count","Container","Row","App","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById","window","getState"],"mappings":"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","file":"static/js/main.0ee78467.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeader\":\"CardTemplate_cardHeader__3-kHY\",\"cardId\":\"CardTemplate_cardId___Q-_Z\"};","import { fetchBaseQuery } from \"@reduxjs/toolkit/query\";\nimport {createApi} from \"@reduxjs/toolkit/dist/query/react\";\n\nexport const pokemonApi = createApi({\n  reducerPath: \"pokemonApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"\" }),\n  endpoints: (builder) => ({\n    getPokemon: builder.query({\n      query: (fullLink) => fullLink,\n    }),\n  }),\n});\n\nexport const { useGetPokemonQuery } = pokemonApi","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Pagination({ prevPageUrl, nextPageUrl, setPage }) {\n  return (\n    <>\n      <button disabled={!prevPageUrl} onClick={() => setPage(prevPageUrl)}>\n        Previous\n      </button>\n      <button disabled={!nextPageUrl} onClick={() => setPage(nextPageUrl)}>\n        Next\n      </button>\n    </>\n  );\n}\n\nPagination.propTypes = {\n  prevPageUrl: PropTypes.string,\n  nextPageUrl: PropTypes.string,\n  setPage: PropTypes.func,\n};\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport css from './CardTemplate.module.css'\n\nexport default function CardTemplate({ data, callback }) {\n  return (\n    <Card\n      border=\"dark\"\n      text=\"secondary\"\n      bg=\"warning\"\n      className=\"mb-4 border-2\"\n      style={{ width: \"15rem\", minHeight: \"28rem\", overflow: \"hidden\" }}\n    >\n      <Card.Header className={css.cardHeader}>\n        <h4>{data.name.toUpperCase()}</h4> <h4 className={css.cardId}>{data.order}</h4>\n      </Card.Header>\n      <Card.Img\n        variant=\"top\"\n        src={data.sprites.other[\"official-artwork\"].front_default}\n      />\n      <Card.Body>\n        <Card.Title>Abilities:</Card.Title>\n        <Card.Text as=\"div\">\n          <ul ref={callback}>\n            {data.abilities.map((ability) => (\n              <li key={ability.ability.name}>\n                {ability.ability.name[0].toUpperCase() +\n                  ability.ability.name.substr(1)}\n              </li>\n            ))}\n          </ul>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nCardTemplate.propTypes = {\n  data: PropTypes.shape({\n    sprites: PropTypes.object,\n    abilities: PropTypes.array,\n    name: PropTypes.string,\n    order: PropTypes.number\n  }),\n  callback: PropTypes.func\n};\n","import React from \"react\";\nimport { useGetPokemonQuery } from \"../../../common/apiSlice\";\nimport PropTypes from \"prop-types\";\nimport CardTemplate from \"./CardTemplate/CardTemplate\";\n\nexport default function PokemonCard({ pokemonLink, callback }) {\n  const { data, error, isLoading } = useGetPokemonQuery(pokemonLink);\n  return (\n    <>\n      {error ? (\n        <>Oh no, there was an error</>\n      ) : isLoading ? (\n        <>Loading...</>\n      ) : data ? (\n        <CardTemplate callback={callback} data={data} />\n      ) : null}\n    </>\n  );\n}\n\nPokemonCard.propTypes = {\n  pokemonLink: PropTypes.string,\n  callback: PropTypes.func\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useGetPokemonQuery } from \"../../common/apiSlice\";\nimport Pagination from \"./Pagination/Pagination\";\nimport PokemonCard from \"./PokemonCard/PokemonCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\n\nexport default function PokemonsList() {\n  const [page, setPage] = useState(\n    \"https://pokeapi.co/api/v2/pokemon/?limit=10\"\n  );\n  const { data, error, isLoading } = useGetPokemonQuery(page);\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  const [nextPageUrl, setNextPageUrl] = useState();\n\n  useEffect(() => {\n    setPrevPageUrl(data?.previous);\n    setNextPageUrl(data?.next);\n  }, [data]);\n\n  const observer = useRef();\n  const lastPokemonCardRef = useCallback(\n    (node) => {\n      if (isLoading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting) {\n          setPage(data.next);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [data]\n  );\n\n  const newPokemonElement = useMemo(() => {\n    if (data) {\n      return data.results.map((p, index) => {\n        if (data.results.length === index + 1) {\n          return (\n            <Col key={p.name}>\n              <PokemonCard callback={lastPokemonCardRef} pokemonLink={p.url} />\n            </Col>\n          );\n        } else {\n          return (\n            <Col key={p.name}>\n              <PokemonCard pokemonLink={p.url} />\n            </Col>\n          );\n        }\n      });\n    }\n    return null;\n  }, [data]);\n  const pokemonElement = useRef([]);\n\n  useEffect(() => {\n    if (newPokemonElement) {\n      pokemonElement.current.push(newPokemonElement);\n    }\n  }, [newPokemonElement]);\n  return (\n    <>\n      {error ? (\n        <>Oh no, there was an error</>\n      ) : isLoading & !pokemonElement.current.length ? (\n        <>Loading...</>\n      ) : pokemonElement.current.length ? (\n        <>\n          <h3>Total pokemon count: {data.count}</h3>\n          <Container>\n            <Row>{pokemonElement.current}</Row>\n          </Container>\n          <Pagination\n            prevPageUrl={prevPageUrl ? prevPageUrl : null}\n            nextPageUrl={nextPageUrl ? nextPageUrl : null}\n            setPage={setPage}\n          />\n        </>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport PokemonList from \"../features/PokemonList/PokemonList\";\n\nfunction App() {\n  return (\n    <>\n      <PokemonList />\n    </>\n  );\n}\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query/react\";\nimport { pokemonApi } from \"../common/apiSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    [pokemonApi.reducerPath]: pokemonApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(pokemonApi.middleware),\n});\n\nsetupListeners(store.dispatch);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nwindow.store = store.getState()"],"sourceRoot":""}